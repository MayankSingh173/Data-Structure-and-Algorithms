https://leetcode.com/problems/trim-a-binary-search-tree/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode trimBST(TreeNode root, int low, int high) {
        if(root == null) return root;

        if(root.val > low && root.val > high){
            return trimBST(root.left, low, high);
        }
        else if(root.val < low && root.val < high){
            return trimBST(root.right, low, high);
        }
        else{
            TreeNode left = trimBST(root.left, low, high);
            TreeNode right = trimBST(root.right, low, high);
            root.left = left;
            root.right = right;
            
            return root;
        }
    }
}